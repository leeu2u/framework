package edu.kh.comm.member.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import edu.kh.comm.member.model.service.MyPageService;
import edu.kh.comm.member.model.vo.Member;

// /member/myPage/profile
// /member/myPage/info
// /member/myPage/changPw
// /member/myPage/secession(탈퇴)

@Controller
@RequestMapping("/member/myPage")
@SessionAttributes({"loginMember"}) //session scope에서 loginMember를 얻어옴
public class MyPageController {
	
	
	//MyPageService 연결
	@Autowired
	private MyPageService service;
	
	//회원 정보 조회 이동
	@GetMapping("/info")
	public String info() {
		return "member/myPage-info"; //jsp 이름
		
	}
	
	
	//비밀번호 변경
	@GetMapping("/changePw")
	public String changePw() {
		return "member/myPage-changePw"; //jsp 이름
		
	}
	

	//회원 탈퇴 이동
	@GetMapping("/secession")
	public String secession() {
		return "member/myPage-secession"; //jsp 이름
		
	}

	//프로필 변경 이동
	@GetMapping("/profile")
	public String profile() {
		return "member/myPage-profile"; //jsp 이름
		
	}
	
	//회원 정보 수정controller
	@PostMapping("/info")
	public String updateInfo(@ModelAttribute("loginMember") Member loginMember,
							@RequestParam Map<String, Object> paramMap,
							//요청 시 전달된 파라미터를 구분하지 않고 모두 Map에 담아서 얻어옴
							String[] updateAddress
						
							
							
			) {
				return null;
		
		
		//필요한 값
		//- 닉네임
		//- 전화번호
		//- 주소
		//- 회원번호(Session -> 로그인한 회원 정보를 통해 얻어옴)
		//	-> Session에 있는 값을 얻어오는 방법(2ea) : @SessionAttributes, @ModelAttribute 필요
		
		//@SessionAttributes
		// 1) Model에 세팅된 데이터의 Key와 
		//    @SessionAttributes(클래스에 작성함)에 작성된 key가 같으면 
		// 		Model 세팅된 데이터를 request -> session scope로 이동시켜주는 역할
		
		//2) 기존에 session scope에 이동시킨 값을 얻어오는 역할도 수행한다. 
		// @ModelAttribute("loginMember") Member loginMember
		//					[session key]
		//					--> @SessionAttributes를 통해 session scope에 등록된 값을 얻어와 
		//					오른쪽에 작성된 Member loginMember 변수에 대입
		//					단, 클래스 위에 @SessionAttributes({"loginMember"})가 작성되어 있어야 가능
	}
	
	
	
	

}
