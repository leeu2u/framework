package deu.kh.comm.member.model.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import edu.kh.comm.member.model.dao.MemberDAO;
import edu.kh.comm.member.model.vo.Member;

@Service // 비즈니스 로직 처리를 하는 클래스임을 명시 + bean 등록
          // == service 객체임을 명시하면서 bean(클래스)를 생성

//내가 만든 클래스를 상속받는건 푸조에 위배하지않음
public class MemberServiceImpl implements MemberService {
	
	//dao 연결해주기
	@Autowired
	private MemberDAO dao;
	
	
	/*
	 *Connection을 Service에서 얻어왔었던 이유
	 *
	 * - Service의 메서드 하나는 요청을 처리하는 업무 단위로써 
	 *   -> 해당 업무가 끝난 후 트랜잭션을 한번에 처리하기 위해서
	 *   	어쩔 수 없이 Connection을 Service에서 얻어올 수 밖에 없었다. 
	 *   
	 *   Connection을 얻어오거나 반환하거나 
	 *   트랜젝션을 처리하는(commit/rollback) 구문을 적지 않아도
	 *   Spring에서 제어를 하기 때문에 Service구문이 간단해진다. 
	 */

	//로그인 서비스 구현
	@Override
	public Member login(Member inputMember) {
		
	/*
	 * connection conn = getConnection();
	 * Member loginMember = dao.login(conn, member);
	 * close(conn) 이제 안함! 
	 *
	 */
		Member loginMember = dao.login(inputMember);
		
		return null;
	}

}
