<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- "/WEB-INF/views/member/signUp" 리턴구문이 왔음 servlet-context.xml 파일 - DispatcherServlet의 
		설정파일 - 모든 요청을 받아서 Controller를 찾고, 응답에 따라 View를 찾아서 연결 *HandlerMapping: 요청받은 
		주소에 따라서 해당 주소를 처리할 컨트롤러를 연결하는 역할을 한다. -> 기존의 xml 방식을 사용하다가 아래 어노테이션으로 대체되었다! 
		@RequestMapping / @GetMapping / @PostMapping으로 대체됨 -->

	<!-- view Resolver -Controller에서 반환된 문자열 앞/뒤에 prefix(접두사)/suffix(접미사)를 추가하여 
		만들어진 경로로 jsp로 요청 위임(== forward) member/signUp -> prefix와 suffix가 부텅 forward함 
		단, 반환된 문자열의 시작이 redirect:redirect할 주소를 적어주면된다.구문이면 재요청(redirect) 진행 -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 지정된 패키지 이하에 존재하는(edu.kh.comm) @Component, @Controllerm, @Service, @Repository를 
		찾아서 bean으로 생성하는 구문이 아래 구문! -->
	<context:component-scan
		base-package="edu.kh.comm" />

	<!-- interceoptors: 인터셉터를 모아둔 태그 -->
	<interceptors>

		<!-- interceptor : 요청이 Dispatcher Sevlet에서 Controller에 도달하기 전 또는 후에 응답/요청 
			객체(req, resp)를 가로채서 사용할 수 있는 객체이다. -->

		<interceptor>
			<!-- 가로챌 요청의 패턴을 지정 -->
			<mapping path="/**" />

			<!-- 인터셉터 역할을 수행할 클래스를 찾아서 bean으로 등록 -->
			<beans:bean id="BoardTypeInterceptor"
				class="edu.kh.comm.interceptor.BoardTypeInterceptor" />


		</interceptor>

	</interceptors>



</beans:beans>
